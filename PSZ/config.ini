[Scrapper]
pagenum = 10000
name = 'cars'
runscript = 'scrapy crawl cars'

[DataAnalysis]
num_of_cars_per_make = True
num_of_cars_per_location = False
num_of_cars_per_color = True
most_expensive_cars = True
newest_cars = True
max_parameters_cars = True
max_parameters = capacity,horsepower,mileage

[FileNames]
dataanalysis = analysis_result.docx
datavisualization = top10_locations,mileage_classes,year_classes,transmission_classes,price_classes

[DataVisualization]
top10_locations = True
mileage_classes = True
year_classes = True
transmission_classes = True
price_classes = True

[Postgres]
port = 5432
database = postgres
username = postgres
password = postgres
host = 127.0.0.1

[Data]
columns = used,make,model,year,mileage,body,fuel,capacity,horsepower,changeable_price,trade,dual_mass_flywheel,motor_emission_class,drivetrain,automatic_transmission,doors,seats,wheel_side_left,air_condition,exterior_color,interior_color,interior_material,registered_until,is_registered,origin,damaged,country,leasing,loan,place,link,price,id
filter = make,year,mileage,fuel,capacity,horsepower,automatic_transmission,drivetrain,exterior_color,is_registered,origin,damaged,country,place,price
encoding = make,model,body,fuel,motor_emission_class,drivetrain,air_condition,exterior_color,interior_color,interior_material,registered_until,origin,country,place,used,changeable_price,trade,dual_mass_flywheel,automatic_transmission,wheel_side_left,is_registered,damaged,leasing,loan

[Regression]
learning_rate = 0.05
num_epochs = 100000
split = 0.005
data_limit = 40000

[TopRegressionModel]
make = 561.4949755971644
year = 31967.213643529038
mileage = -11792.155298863983
fuel = -962.5805980529525
capacity = -4331.038724295583
horsepower = 40813.272948644604
automatic_transmission = -1879.4708080167395
drivetrain = 1676.350126248905
exterior_color = -653.0075451336107
is_registered = -482.88083041088936
origin = -540.0099408462411
damaged = -577.3210871771785
country = -1059.0947116845794
place = -178.29396957199722

[ClassificationClasses]
dirty_cheap = 0-2000
cheap = 2000-5000
middle_class = 5000-10000
upper_middle_class = 10000-15000
serbian_dream = 15000-20000
businessman = 20000-25000
aristocrat = 25000-30000
american_dream = 30000-1000000

[ClassificationDistances]
hamming = False
jaccard = False
cosine = False
euclidean = True
cityblock = False
minkowski = False

[Classification]
numer_of_neighbours = 230

[TopRegressionModelMetadata]
r2_result = 0.6115811182076241
data = 40000
epochs = 100000
split = 0.005
learning_rate = 0.05

